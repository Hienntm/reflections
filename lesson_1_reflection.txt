How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Because of changes we had made introduced bugs in the newer version

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Easy access to the entire history of a file let us control more efficiently 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Git: manually choosing when to create a commit
    -pros: let us control actively what is important what is need to commit a new version
    -cons: it's possible to lose data which is not saved yet
    Google:
    -pros: all changes will be save automatically
    -cons: there will be a lot of versions more than we actually need

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git is code-oriented version control system. Code files are linked to each other.

How can you use the commands git log and git diff to view the history of files?

    I run commands: git log (display commits); git diff first-ver second-ver (display diff of 2 versions)

How might using version control make you more confident to make changes that
could break something?

    Because with command git checkout, we can easily track out when bugs were introduced.

Now that you have your workspace set up, what do you want to try using Git for?

    I will control versions of my coding.
